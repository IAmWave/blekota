import numpy as np
import matplotlib.pyplot as plt
import const


def compare(y, y2, fs=const.DEFAULT_FS):
    """Take a ground truth and predicted sounds and show a plot comparing them. Generate a graph of how the sounds differ over time.

    Args:
        y (array): The ground truth sound.
        y2 (array): The predicted sound.
        fs (int, optional): Sampling frequency.
    """
    x = np.linspace(0, y.size / fs, y.size)

    plt.figure()
    plt.subplot(211)
    plt.title('Waveform comparison')
    plt.plot(x, y2, 'r', linewidth=4.0)
    plt.plot(x, y, 'k--', linewidth=2.0)
    plt.xlim(0, 0.05)
    plt.xlabel('Time')
    plt.ylabel('Sound wave')

    running_average_n = 100  # Smooth out the error using a running average

    def running_average(arr):
        return np.convolve(arr, np.ones((running_average_n,)) / running_average_n, mode='valid')

    err = running_average((y - y2) ** 2)
    err_bad = running_average(y ** 2)    # The error if y2 was a constant 0, for comparison

    plt.subplot(212)
    plt.title('Square error over time')
    plt.plot(err[::running_average_n], 'r')
    plt.plot(err_bad[::running_average_n], 'k')
    plt.axhline(0, color='black')
    plt.xlabel('Time')
    plt.ylabel('Square error')

    plt.show()


def show(y, fs=const.DEFAULT_FS):
    """Plot a sound.

    Args:
        y (array): The sound to plot.
        fs (int, optional): Sampling frequency.
    """
    x = np.linspace(0, y.size / fs, y.size)

    plt.figure()
    plt.title('Waveform')
    plt.axhline(0, color='black')
    plt.plot(x, y, 'r', linewidth=2.0)
    plt.xlim(0, 0.05)
    plt.xlabel('Time')
    plt.ylabel('Sound wave')
    plt.show()


def heatmap(p, fs=const.DEFAULT_FS):
    """Plot a probability heatmap generated by a model.

    Args:
        p (array of shape [number of samples, 256]): The probabilities of each sample's values.
        fs (int, optional): Sampling frequency.
    """
    plt.figure()
    plt.title('Probability heatmap')
    plt.imshow(p.T, cmap='hot', interpolation='nearest')
    plt.show()
